#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test Arabic Text Fix for Basira System
ุงุฎุชุจุงุฑ ุฅุตูุงุญ ุงููุตูุต ุงูุนุฑุจูุฉ ููุธุงู ุจุตูุฑุฉ

Quick test to verify Arabic text handling is working correctly.
ุงุฎุชุจุงุฑ ุณุฑูุน ููุชุฃูุฏ ูู ุนูู ูุนุงูุฌ ุงููุตูุต ุงูุนุฑุจูุฉ ุจุดูู ุตุญูุญ.

Author: Basira System Development Team
Created by: Basil Yahya Abdullah - Iraq/Mosul
Version: 1.0.0
"""

import tkinter as tk
from tkinter import ttk
import sys
import os

# Add current directory to path
sys.path.insert(0, '.')

try:
    from baserah_system.arabic_text_handler import fix_arabic_text, fix_button_text, fix_title_text, fix_label_text
    ARABIC_HANDLER_AVAILABLE = True
    print("โ ูุนุงูุฌ ุงููุตูุต ุงูุนุฑุจูุฉ ูุชุงุญ")
except ImportError as e:
    print(f"โ ูุนุงูุฌ ุงููุตูุต ุงูุนุฑุจูุฉ ุบูุฑ ูุชุงุญ: {e}")
    ARABIC_HANDLER_AVAILABLE = False
    # ุฏูุงู ุจุฏููุฉ
    def fix_arabic_text(text): return text
    def fix_button_text(text): return text
    def fix_title_text(text): return text
    def fix_label_text(text): return text


class ArabicTextTestApp:
    """ุชุทุจูู ุงุฎุชุจุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ"""

    def __init__(self):
        """ุชููุฆุฉ ุงูุชุทุจูู"""
        self.root = tk.Tk()
        self.root.title("ุงุฎุชุจุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ - ูุธุงู ุจุตูุฑุฉ")
        self.root.geometry("800x600")
        self.root.configure(bg='#f0f0f0')

        self.create_widgets()

    def create_widgets(self):
        """ุฅูุดุงุก ุนูุงุตุฑ ุงููุงุฌูุฉ"""
        
        # ุงูุนููุงู ุงูุฑุฆูุณู
        title_frame = ttk.Frame(self.root)
        title_frame.pack(fill=tk.X, padx=10, pady=10)

        # ุงุฎุชุจุงุฑ ุงูุนููุงู
        title_label = ttk.Label(title_frame,
                               text=fix_title_text("๐ ุงุฎุชุจุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ - ูุธุงู ุจุตูุฑุฉ ๐"),
                               font=('Arial', 16, 'bold'))
        title_label.pack()

        # ูุนูููุงุช ุงูุญุงูุฉ
        status_frame = ttk.LabelFrame(self.root, text=fix_label_text("ุญุงูุฉ ูุนุงูุฌ ุงููุตูุต ุงูุนุฑุจูุฉ"))
        status_frame.pack(fill=tk.X, padx=10, pady=5)

        status_text = f"""
โ ูุนุงูุฌ ุงููุตูุต ุงูุนุฑุจูุฉ: {'ูุชุงุญ' if ARABIC_HANDLER_AVAILABLE else 'ุบูุฑ ูุชุงุญ'}
๐ง Python tkinter: ูุชุงุญ
๐ ููุช ุงูุงุฎุชุจุงุฑ: ุงูุขู
        """

        status_label = ttk.Label(status_frame, text=fix_arabic_text(status_text), font=('Arial', 11))
        status_label.pack(padx=10, pady=10)

        # ุงุฎุชุจุงุฑุงุช ุงููุตูุต
        tests_frame = ttk.LabelFrame(self.root, text=fix_label_text("ุงุฎุชุจุงุฑุงุช ุงููุตูุต ุงูุนุฑุจูุฉ"))
        tests_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=5)

        # ุงููุตูุต ุงูุชุฌุฑูุจูุฉ
        test_texts = [
            "ูุธุงู ุจุตูุฑุฉ",
            "ุงููุธุงู ุงููุจุชูุฑ ููุชูุงุถู ูุงูุชูุงูู",
            "ุงููุธุงู ุงูุซูุฑู ูุชูููู ุงูุฏูุงู",
            "ุฅุจุฏุงุน ุจุงุณู ูุญูู ุนุจุฏุงููู ูู ุงูุนุฑุงู/ุงูููุตู",
            "ุชูุงูู = V ร Aุ ุชูุงุถู = D ร A",
            "A = x.dA - โซx.d2A"
        ]

        for i, text in enumerate(test_texts):
            # ุฅุทุงุฑ ููู ุงุฎุชุจุงุฑ
            test_frame = ttk.Frame(tests_frame)
            test_frame.pack(fill=tk.X, padx=5, pady=2)

            # ุงููุต ุงูุฃุตูู
            original_label = ttk.Label(test_frame, text=f"ุงูุฃุตูู: {text}", 
                                     font=('Arial', 10), foreground='red')
            original_label.pack(anchor='w')

            # ุงููุต ุงูููุตุญุญ
            fixed_text = fix_arabic_text(text)
            fixed_label = ttk.Label(test_frame, text=f"ุงูููุตุญุญ: {fixed_text}", 
                                   font=('Arial', 10), foreground='green')
            fixed_label.pack(anchor='w')

            # ุฎุท ูุงุตู
            if i < len(test_texts) - 1:
                separator = ttk.Separator(test_frame, orient='horizontal')
                separator.pack(fill=tk.X, pady=2)

        # ุฃุฒุฑุงุฑ ุงูุงุฎุชุจุงุฑ
        buttons_frame = ttk.Frame(self.root)
        buttons_frame.pack(pady=10)

        # ุงุฎุชุจุงุฑ ุงูุฃุฒุฑุงุฑ
        test_btn1 = ttk.Button(buttons_frame, text=fix_button_text("๐ ุงุฎุชุจุงุฑ ุฒุฑ ุนุฑุจู"),
                              command=self.test_button_click)
        test_btn1.pack(side=tk.LEFT, padx=5)

        test_btn2 = ttk.Button(buttons_frame, text=fix_button_text("๐งฎ ุงููุธุงู ุงููุจุชูุฑ"),
                              command=self.test_button_click)
        test_btn2.pack(side=tk.LEFT, padx=5)

        test_btn3 = ttk.Button(buttons_frame, text=fix_button_text("๐ ุงูุชูููู ุงูุซูุฑู"),
                              command=self.test_button_click)
        test_btn3.pack(side=tk.LEFT, padx=5)

        # ูุชุงุฆุฌ ุงูุงุฎุชุจุงุฑ
        result_frame = ttk.LabelFrame(self.root, text=fix_label_text("ูุชุงุฆุฌ ุงูุงุฎุชุจุงุฑ"))
        result_frame.pack(fill=tk.X, padx=10, pady=5)

        self.result_text = tk.Text(result_frame, height=8, wrap=tk.WORD)
        self.result_text.pack(fill=tk.X, padx=5, pady=5)

        # ุฅุถุงูุฉ ูุชุงุฆุฌ ุฃูููุฉ
        initial_result = fix_arabic_text("""
๐ฏ ูุชุงุฆุฌ ุงุฎุชุจุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ:

โ ุฅุฐุง ูุงูุช ุงููุตูุต ุชุธูุฑ ุจุงูุงุชุฌุงู ุงูุตุญูุญุ ูุงููุนุงูุฌ ูุนูู ุจูุฌุงุญ!
โ ุฅุฐุง ูุงูุช ุงููุตูุต ูุนููุณุฉุ ูููุงู ูุดููุฉ ูู ุงููุนุงูุฌ.

๐ง ุญุงูุฉ ุงููุนุงูุฌ: """ + ('ูุนูู ุจูุฌุงุญ' if ARABIC_HANDLER_AVAILABLE else 'ูุญุชุงุฌ ุฅุตูุงุญ'))

        self.result_text.insert(tk.END, initial_result)

        # ุดุฑูุท ุงูุญุงูุฉ
        self.create_status_bar()

    def create_status_bar(self):
        """ุฅูุดุงุก ุดุฑูุท ุงูุญุงูุฉ"""
        status_frame = ttk.Frame(self.root)
        status_frame.pack(side=tk.BOTTOM, fill=tk.X)

        self.status_var = tk.StringVar()
        self.status_var.set(fix_arabic_text("ุฌุงูุฒ ููุงุฎุชุจุงุฑ - ุงููุฑ ุนูู ุงูุฃุฒุฑุงุฑ ูุงุฎุชุจุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ"))

        status_label = ttk.Label(status_frame, textvariable=self.status_var)
        status_label.pack(side=tk.LEFT, padx=5)

        # ูุนูููุงุช ุฅุถุงููุฉ
        info_label = ttk.Label(status_frame, text="Basira System - Arabic Text Test")
        info_label.pack(side=tk.RIGHT, padx=5)

    def test_button_click(self):
        """ุงุฎุชุจุงุฑ ุงูููุฑ ุนูู ุงูุฃุฒุฑุงุฑ"""
        import datetime
        
        test_message = fix_arabic_text(f"""
๐ ุชู ุงูููุฑ ุนูู ุงูุฒุฑ ุจูุฌุงุญ!
๐ ุงูููุช: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
โ ุงููุตูุต ุงูุนุฑุจูุฉ ุชุนูู ุจุดูู ุตุญูุญ!
๐ ูุธุงู ุจุตูุฑุฉ - ุฅุจุฏุงุน ุจุงุณู ูุญูู ุนุจุฏุงููู

""")
        
        self.result_text.insert(tk.END, test_message)
        self.result_text.see(tk.END)
        
        self.status_var.set(fix_arabic_text("โ ุชู ุงุฎุชุจุงุฑ ุงูุฒุฑ ุจูุฌุงุญ - ุงููุตูุต ุงูุนุฑุจูุฉ ุชุนูู!"))

    def run(self):
        """ุชุดุบูู ุงูุชุทุจูู"""
        self.root.mainloop()


def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    print("๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ ููุธุงู ุจุตูุฑุฉ...")
    print("๐งช Starting Arabic text test for Basira System...")
    
    # ุงุฎุชุจุงุฑ ุงููุนุงูุฌ ูู ูุญุฏุฉ ุงูุชุญูู ุฃููุงู
    print("\n๐ ุงุฎุชุจุงุฑ ุงููุนุงูุฌ ูู ูุญุฏุฉ ุงูุชุญูู:")
    test_texts = [
        "ูุธุงู ุจุตูุฑุฉ",
        "ุงููุธุงู ุงููุจุชูุฑ ููุชูุงุถู ูุงูุชูุงูู",
        "ุฅุจุฏุงุน ุจุงุณู ูุญูู ุนุจุฏุงููู"
    ]
    
    for text in test_texts:
        print(f"ุงูุฃุตูู: {text}")
        fixed = fix_arabic_text(text)
        print(f"ุงูููุตุญุญ: {fixed}")
        print("---")
    
    print("\n๐ฅ๏ธ ุจุฏุก ุงุฎุชุจุงุฑ ุงููุงุฌูุฉ ุงูุฑุณูููุฉ...")
    
    try:
        app = ArabicTextTestApp()
        app.run()
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชุดุบูู ุงุฎุชุจุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()
