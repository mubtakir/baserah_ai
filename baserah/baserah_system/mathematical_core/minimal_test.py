#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Minimal Test for Fixed Mathematical Core
ุงุฎุชุจุงุฑ ูุจุณุท ููููุงุฉ ุงูุฑูุงุถูุฉ ุงูููุตุญุญุฉ
"""

import numpy as np
import sys
import os

# Add current directory to path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def minimal_test():
    """ุงุฎุชุจุงุฑ ูุจุณุท"""
    
    print("๐งช ุงุฎุชุจุงุฑ ูุจุณุท ููููุงุฉ ุงูุฑูุงุถูุฉ ุงูููุตุญุญุฉ...")
    print("๐" + "="*80 + "๐")
    print("๐ ุงูููุงุฉ ุงูุฑูุงุถูุฉ - ุจุฏูู PyTorch")
    print("โก NumPy ุจุฏูุงู ูู PyTorch")
    print("๐" + "="*80 + "๐")
    
    try:
        # ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏ ุงูุฃุณุงุณู
        print("\n๐ฆ ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏ ุงูุฃุณุงุณู...")
        
        try:
            from innovative_calculus_engine import InnovativeCalculusEngine
            print("โ ุชู ุงุณุชูุฑุงุฏ InnovativeCalculusEngine!")
        except Exception as e:
            print(f"โ ูุดู ุงุณุชูุฑุงุฏ InnovativeCalculusEngine: {e}")
        
        try:
            from function_decomposition_engine import FunctionDecompositionEngine
            print("โ ุชู ุงุณุชูุฑุงุฏ FunctionDecompositionEngine!")
        except Exception as e:
            print(f"โ ูุดู ุงุณุชูุฑุงุฏ FunctionDecompositionEngine: {e}")
        
        try:
            from general_shape_equation import GeneralShapeEquation, EquationType
            print("โ ุชู ุงุณุชูุฑุงุฏ GeneralShapeEquation!")
        except Exception as e:
            print(f"โ ูุดู ุงุณุชูุฑุงุฏ GeneralShapeEquation: {e}")
        
        # ุงุฎุชุจุงุฑ ุฅูุดุงุก ุงููุญุฑูุงุช
        print("\n๐ ุงุฎุชุจุงุฑ ุฅูุดุงุก ุงููุญุฑูุงุช...")
        
        try:
            calculus_engine = InnovativeCalculusEngine()
            print("โ ุชู ุฅูุดุงุก ูุญุฑู ุงูุชูุงุถู ูุงูุชูุงูู!")
        except Exception as e:
            print(f"โ ูุดู ุฅูุดุงุก ูุญุฑู ุงูุชูุงุถู ูุงูุชูุงูู: {e}")
        
        try:
            decomp_engine = FunctionDecompositionEngine()
            print("โ ุชู ุฅูุดุงุก ูุญุฑู ุชูููู ุงูุฏูุงู!")
        except Exception as e:
            print(f"โ ูุดู ุฅูุดุงุก ูุญุฑู ุชูููู ุงูุฏูุงู: {e}")
        
        try:
            gse = GeneralShapeEquation()
            print("โ ุชู ุฅูุดุงุก ุงููุนุงุฏูุฉ ุงูุนุงูุฉ ููุดูู!")
        except Exception as e:
            print(f"โ ูุดู ุฅูุดุงุก ุงููุนุงุฏูุฉ ุงูุนุงูุฉ ููุดูู: {e}")
        
        # ุงุฎุชุจุงุฑ ุจุณูุท ูููุธุงุฆู
        print("\n๐ ุงุฎุชุจุงุฑ ุจุณูุท ูููุธุงุฆู...")
        
        # ุงุฎุชุจุงุฑ NumPy
        x = np.linspace(-1, 1, 10)
        y = x**2
        print(f"โ NumPy ูุนูู: x={x[:3]}, y={y[:3]}")
        
        # ุงุฎุชุจุงุฑ ุฏุงูุฉ ุจุณูุทุฉ
        def simple_func(x):
            return x**2
        
        result = simple_func(x)
        print(f"โ ุงูุฏูุงู ุชุนูู: result={result[:3]}")
        
        print("\n๐ ุงูุงุฎุชุจุงุฑ ุงููุจุณุท ูุฌุญ!")
        print("โ ุงูููุงุฉ ุงูุฑูุงุถูุฉ ุชุนูู ุจุฏูู PyTorch!")
        
        return True
        
    except Exception as e:
        print(f"\nโ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ ุงููุจุณุท: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = minimal_test()
    if success:
        print("\n๐ ุงูุงุฎุชุจุงุฑ ุงููุจุณุท ูุฌุญ!")
    else:
        print("\nโ ูุดู ุงูุงุฎุชุจุงุฑ ุงููุจุณุท!")
